import { Item } from "@/store/catalog";
import { NextResponse } from "next/server";

// –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ç–∏–ø—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
interface OrderData {
  email: string;
  name: string;
  phone: string;
  address?: string;
  comment?: string;
  totalPrice: number;
  isDelivery: boolean;
  basket: Array<{
    item: Item;
    name: string;
    count: number;
    totalPrice: number;
  }>;
}

export async function POST(request: Request) {
  try {
    const data: OrderData = await request.json();

    const {
      email,
      name,
      phone,
      address,
      comment,
      totalPrice,
      isDelivery,
      basket,
    } = data;

    const token = process.env.TELEGRAM_BOT_TOKEN;
    const chatId = process.env.TELEGRAM_CHAT_ID;

    if (!token || !chatId) {
      console.error("TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã");

      return NextResponse.json(
        { message: "Server configuration error" },
        { status: 500 },
      );
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const message = `
üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑*:
- *–ò–º—è*: ${name}
- *Email*: ${email}
- *–¢–µ–ª–µ—Ñ–æ–Ω*: ${phone}
- *–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏*: ${isDelivery ? "–î–æ—Å—Ç–∞–≤–∫–∞" : "–°–∞–º–æ–≤—ã–≤–æ–∑"}
${isDelivery ? `- *–ê–¥—Ä–µ—Å*: ${address}` : ""}
- *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π*: ${comment || "–ù–µ—Ç"}
- *–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å*: ${totalPrice}‚ÇΩ
- *–ö–æ—Ä–∑–∏–Ω–∞*:
${basket.map((item) => `  ‚Ä¢ ${item.item.name} x${item.count}`).join("\n")}
    `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram API
    // const telegramResponse = await fetch(
    //   `https://api.telegram.org/bot${token}/sendMessage`,
    //   {
    //     method: "POST",
    //     headers: {
    //       "Content-Type": "application/json",
    //     },
    //     body: JSON.stringify({
    //       chat_id: chatId,
    //       text: message,
    //       parse_mode: "Markdown",
    //     }),
    //   },
    // );

    // const telegramData = await telegramResponse.json();

    // if (!telegramData.ok) {
    //   console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:", telegramData);
    //   return NextResponse.json(
    //     { message: "Failed to send message to Telegram" },
    //     { status: 500 },
    //   );
    // }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    return NextResponse.json(
      { message: "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!", data: message },
      { status: 200 },
    );
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ sendOrder:", error);
    return NextResponse.json(
      { message: "Internal Server Error" },
      { status: 500 },
    );
  }
}
